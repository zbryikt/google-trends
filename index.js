// Generated by LiveScript 1.3.1
var request, fs, bluebird, getTrend, getTrends, trend;
request = require('request');
fs = require('fs');
bluebird = require('bluebird');
getTrend = function(keyword){};
getTrends = function(list, hash, res, rej){};
trend = {
  init: function(data){
    var ret;
    if (!data) {
      data = fs.readFileSync('curl').toString();
    }
    ret = /-H 'cookie: ([^']+)'/.exec(data);
    if (!ret) {
      return this.config = {};
    } else {
      return this.config = {
        cookie: ret[1]
      };
    }
  },
  get: function(keyword){
    var this$ = this;
    if (!this.config) {
      this.init();
    }
    return new bluebird(function(res, rej){
      return request({
        url: "http://www.google.com/trends/fetchComponent?q=" + encodeURIComponent(keyword) + "&cid=TIMESERIES_GRAPH_0&export=3",
        method: 'GET',
        headers: this$.config
      }, function(e, r, b){
        var ret, value;
        if (e || !b) {
          return rej(null);
        }
        ret = /\{"v":([0-9.]+),"f":"[0-9.]+"\}\]\}\]\}\}\);/.exec(b);
        value = !ret
          ? 0
          : parseFloat(ret[1]);
        return res({
          keyword: keyword,
          value: value
        });
      });
    });
  },
  _getAll: function(list, hash, res, rej){
    var tag, this$ = this;
    if (list.length === 0) {
      return res(hash);
    }
    tag = list.splice(0, 1);
    return this.get(tag).then(function(arg$){
      var keyword, value;
      keyword = arg$.keyword, value = arg$.value;
      hash[keyword] = value;
      return this$._getAll(list, hash, res, rej);
    })['catch'](rej);
  },
  getAll: function(list){
    var this$ = this;
    return new bluebird(function(res, rej){
      return this$._getAll(list, {}, res, rej);
    });
  }
};
module.exports = trend;